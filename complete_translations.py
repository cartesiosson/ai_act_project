#!/usr/bin/env python3
"""
Script completo para a√±adir todas las traducciones faltantes en la ontolog√≠a
"""

import re

def complete_translations(file_path):
    """A√±ade todas las traducciones faltantes identificadas por el an√°lisis"""
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Diccionario de entidades que necesitan traducciones
    missing_translations = {
        # Clases principales sin etiquetas en espa√±ol
        'ai:PostDeploymentAssessment': 'Evaluaci√≥n Post-Despliegue',
        'ai:PreDeploymentAssessment': 'Evaluaci√≥n Pre-Despliegue', 
        'ai:ProfessionalUser': 'Usuario Profesional',
        'ai:PublicServiceAllocation': 'Asignaci√≥n de Servicios P√∫blicos',
        'ai:RecruitmentOrEmployment': 'Reclutamiento y Empleo',
        'ai:SecurityRequirement': 'Requisito de Seguridad',
        'ai:RobustnessRequirement': 'Requisito de Robustez',
        'ai:TransparencyRequirement': 'Requisito de Transparencia',
        'ai:ContextualCriterion': 'Criterio Contextual',
        'ai:Deployer': 'Implementador',
        'ai:Distributor': 'Distribuidor',
        'ai:Importer': 'Importador',
        'ai:InterfaceSpec': 'Especificaci√≥n de Interfaz',
        'ai:LimitedRisk': 'Riesgo Limitado',
        'ai:MinimalRisk': 'Riesgo M√≠nimo',
        'ai:HighRisk': 'Alto Riesgo',
        'ai:UnacceptableRisk': 'Riesgo Inaceptable',
        'ai:OversightBody': 'Organismo de Supervisi√≥n',
        'ai:Provider': 'Proveedor',
        'ai:AccuracyEvaluationRequirement': 'Requisito de Evaluaci√≥n de Precisi√≥n',
        'ai:BiometricIdentificationCriterion': 'Criterio de Identificaci√≥n Biom√©trica',
        'ai:Evidence': 'Evidencia',
        'ai:SocialScoring': 'Puntuaci√≥n Social',
        'ai:SubliminalManipulation': 'Manipulaci√≥n Subliminal',
        'ai:DeepfakeGeneration': 'Generaci√≥n de Deepfakes',
        'ai:BiometricIdentificationOrCategorization': 'Identificaci√≥n o Categorizaci√≥n Biom√©trica',
        'ai:DataGovernanceRequirement': 'Requisito de Gobernanza de Datos',
        'ai:FundamentalRightsAssessmentRequirement': 'Requisito de Evaluaci√≥n de Derechos Fundamentales',
        'ai:HumanOversightRequirement': 'Requisito de Supervisi√≥n Humana',
        'ai:LacksHumanOversight': 'Carece de Supervisi√≥n Humana',
        'ai:LawEnforcementCriterion': 'Criterio de Aplicaci√≥n de la Ley',
        'ai:MigrationBorderCriterion': 'Criterio de Migraci√≥n y Control Fronterizo',
        'ai:PostMarketMonitoringRequirement': 'Requisito de Monitoreo Post-Comercializaci√≥n',
        'ai:TrainingDataOrigin': 'Origen de Datos de Entrenamiento',
        'ai:DeploymentContext': 'Contexto de Despliegue',
        'ai:TechnicalRequirement': 'Requisito T√©cnico',
        'ai:CriticalInfrastructureCriterion': 'Criterio de Infraestructura Cr√≠tica',
        'ai:EducationEvaluationCriterion': 'Criterio de Evaluaci√≥n Educativa',
        'ai:TechnicalCriterion': 'Criterio T√©cnico',
        
        # Propiedades sin etiquetas en espa√±ol
        'ai:activatesRequirement': 'activa requisito',
        'ai:assessedSystem': 'sistema evaluado',
        'ai:assignedRiskLevel': 'nivel de riesgo asignado',
        'ai:assignsRiskLevel': 'asigna nivel de riesgo',
        'ai:considersCriterion': 'considera criterio',
        'ai:deploysSystem': 'despliega sistema',
        'ai:distributesSystem': 'distribuye sistema',
        'ai:expectedRiskLevel': 'nivel de riesgo esperado',
        'ai:generatesEvidence': 'genera evidencia',
        'ai:hasName': 'tiene nombre',
        'ai:hasNormativeCriterion': 'tiene criterio normativo',
        'ai:hasPurpose': 'tiene prop√≥sito',
        'ai:hasRequirement': 'tiene requisito de cumplimiento',
        'ai:hasRiskLevel': 'tiene nivel de riesgo',
        'ai:hasTechnicalCriterion': 'tiene criterio t√©cnico',
        'ai:hasTechnicalRequirement': 'tiene requisito t√©cnico',
        'ai:hasTrainingDataOrigin': 'tiene origen de datos de entrenamiento',
        'ai:hasVersion': 'tiene versi√≥n',
        'ai:importsSystem': 'importa sistema',
        'ai:isMonitoredBy': 'es supervisado por',
        'ai:justificationNote': 'nota de justificaci√≥n',
        'ai:justifiedByCriterion': 'justificado por criterio',
        'ai:providesEvidenceFor': 'proporciona evidencia para',
        'ai:providesSystem': 'proporciona sistema',
        'ai:requiresCompliance': 'requiere cumplimiento',
        'ai:triggersComplianceRequirement': 'activa requisito de cumplimiento',
        'ai:triggersCriterion': 'activa criterio',
        'ai:usesSystem': 'usa sistema'
    }
    
    # Funci√≥n para a√±adir etiqueta en espa√±ol
    def add_spanish_label(match):
        entity = match.group(1)
        english_label = match.group(2)
        rest = match.group(3)
        
        if entity in missing_translations:
            spanish_label = missing_translations[entity]
            # A√±adir la etiqueta en espa√±ol
            return f'{entity} rdfs:label "{english_label}"@en,\n        "{spanish_label}"@es{rest}'
        return match.group(0)
    
    # Patr√≥n para encontrar entidades con solo etiqueta en ingl√©s
    pattern = r'(ai:\w+)\s+.*?rdfs:label\s+"([^"]+)"@en\s*([;\s])'
    content = re.sub(pattern, add_spanish_label, content, flags=re.DOTALL)
    
    # Funci√≥n para a√±adir comentarios en espa√±ol donde falten
    def add_spanish_comments(text):
        # Comentarios espec√≠ficos que necesitan traducci√≥n
        comment_translations = {
            "End user who interacts with the system without participating in its development or deployment.": 
                "Usuario final que interact√∫a con el sistema sin participar en su desarrollo o despliegue.",
            "Professional user who uses the system in the exercise of their profession.":
                "Usuario profesional que utiliza el sistema en el ejercicio de su profesi√≥n.",
            "Technical requirement for AI systems to ensure security, such as protection against unauthorized access or attacks.":
                "Requisito t√©cnico para que los sistemas de IA garanticen la seguridad, como protecci√≥n contra accesos no autorizados o ataques.",
            "Technical requirement for AI systems to ensure robustness, such as resilience to errors or adversarial attacks.":
                "Requisito t√©cnico para que los sistemas de IA aseguren la robustez, como resistencia a errores o ataques adversarios.",
            "Technical requirement for AI systems to provide transparency, such as disclosure of AI use or explainability.":
                "Requisito t√©cnico para que los sistemas de IA proporcionen transparencia, como divulgaci√≥n del uso de IA o explicabilidad.",
            "Risk assessment or evaluation performed after the deployment of an AI system.":
                "Evaluaci√≥n o valoraci√≥n de riesgos realizada despu√©s del despliegue de un sistema de IA.",
            "Risk assessment or evaluation performed before the deployment of an AI system.":
                "Evaluaci√≥n o valoraci√≥n de riesgos realizada antes del despliegue de un sistema de IA.",
            "A document, record, or artifact that serves as proof of compliance or assessment for an AI system.":
                "Documento, registro o artefacto que sirve como prueba de cumplimiento o evaluaci√≥n para un sistema de IA.",
        }
        
        for en_comment, es_comment in comment_translations.items():
            if en_comment in text and es_comment not in text:
                text = text.replace(
                    f'rdfs:comment "{en_comment}"@en ;',
                    f'rdfs:comment "{en_comment}"@en,\n        "{es_comment}"@es ;'
                )
        
        return text
    
    content = add_spanish_comments(content)
    
    # Escribir el archivo actualizado
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ Todas las traducciones han sido aplicadas")
    print("üìã Ejecuta el an√°lisis nuevamente para verificar los resultados")

if __name__ == "__main__":
    ontology_file = "/home/cartesio/workspace/FTM/ai_act_project/ontologias/versions/0.36.0/ontologia-v0.36.0.ttl"
    complete_translations(ontology_file)